{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class VoiceRecognitionService {\n  constructor() {\n    this.recognition = new webkitSpeechRecognition();\n    this.isStoppedSpeechRecog = false;\n    this.tempWords = '';\n    this.text = '';\n    this.recognition.interimResults = true;\n    this.recognition.lang = 'en-US';\n  }\n  init() {\n    this.recognition.addEventListener('result', event => {\n      const transcript = Array.from(event.results).map(result => result[0]).map(result => result.transcript).join('');\n      this.tempWords = transcript;\n    });\n  }\n  start() {\n    this.isStoppedSpeechRecog = false;\n    this.recognition.start();\n    console.log('Speech recognition started');\n    this.recognition.addEventListener('end', () => {\n      if (this.isStoppedSpeechRecog) {\n        this.recognition.stop();\n        console.log('End speech recognition');\n      } else {\n        this.wordConcat();\n        this.recognition.start();\n      }\n    });\n  }\n  stop() {\n    this.isStoppedSpeechRecog = true;\n    this.transcribedText();\n    this.recognition.stop();\n    console.log('End speech recognition');\n  }\n  get transcribedText() {\n    return this.voiceService.text;\n  }\n  static {\n    this.ɵfac = function VoiceRecognitionService_Factory(t) {\n      return new (t || VoiceRecognitionService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: VoiceRecognitionService,\n      factory: VoiceRecognitionService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["VoiceRecognitionService","constructor","recognition","webkitSpeechRecognition","isStoppedSpeechRecog","tempWords","text","interimResults","lang","init","addEventListener","event","transcript","Array","from","results","map","result","join","start","console","log","stop","wordConcat","transcribedText","voiceService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Malek\\Desktop\\pidev\\insurance-front\\src\\app\\services\\voice-recognition.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\ndeclare var webkitSpeechRecognition: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VoiceRecognitionService {\n\n  recognition = new webkitSpeechRecognition();\n  isStoppedSpeechRecog = false;\n  tempWords: string = '';\n  text: string = '';\n\n  constructor() {\n    this.recognition.interimResults = true;\n    this.recognition.lang = 'en-US';\n  }\n\n  init() {\n    this.recognition.addEventListener('result', (event: any) => {\n      const transcript = Array.from(event.results)\n        .map((result: any) => result[0])\n        .map((result: any) => result.transcript)\n        .join('');\n      this.tempWords = transcript;\n    });\n  }\n\n  start() {\n    this.isStoppedSpeechRecog = false;\n    this.recognition.start();\n    console.log('Speech recognition started');\n\n    this.recognition.addEventListener('end', () => {\n      if (this.isStoppedSpeechRecog) {\n        this.recognition.stop();\n        console.log('End speech recognition');\n      } else {\n        this.wordConcat();\n        this.recognition.start();\n      }\n    });\n  }\n\n  stop() {\n    this.isStoppedSpeechRecog = true;\n    this.transcribedText();\n    this.recognition.stop();\n    console.log('End speech recognition');\n  }\n\n  get transcribedText(): string {\n    return this.voiceService.text;\n  }\n}\n"],"mappings":";AAMA,OAAM,MAAOA,uBAAuB;EAOlCC,YAAA;IALA,KAAAC,WAAW,GAAG,IAAIC,uBAAuB,EAAE;IAC3C,KAAAC,oBAAoB,GAAG,KAAK;IAC5B,KAAAC,SAAS,GAAW,EAAE;IACtB,KAAAC,IAAI,GAAW,EAAE;IAGf,IAAI,CAACJ,WAAW,CAACK,cAAc,GAAG,IAAI;IACtC,IAAI,CAACL,WAAW,CAACM,IAAI,GAAG,OAAO;EACjC;EAEAC,IAAIA,CAAA;IACF,IAAI,CAACP,WAAW,CAACQ,gBAAgB,CAAC,QAAQ,EAAGC,KAAU,IAAI;MACzD,MAAMC,UAAU,GAAGC,KAAK,CAACC,IAAI,CAACH,KAAK,CAACI,OAAO,CAAC,CACzCC,GAAG,CAAEC,MAAW,IAAKA,MAAM,CAAC,CAAC,CAAC,CAAC,CAC/BD,GAAG,CAAEC,MAAW,IAAKA,MAAM,CAACL,UAAU,CAAC,CACvCM,IAAI,CAAC,EAAE,CAAC;MACX,IAAI,CAACb,SAAS,GAAGO,UAAU;IAC7B,CAAC,CAAC;EACJ;EAEAO,KAAKA,CAAA;IACH,IAAI,CAACf,oBAAoB,GAAG,KAAK;IACjC,IAAI,CAACF,WAAW,CAACiB,KAAK,EAAE;IACxBC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IAEzC,IAAI,CAACnB,WAAW,CAACQ,gBAAgB,CAAC,KAAK,EAAE,MAAK;MAC5C,IAAI,IAAI,CAACN,oBAAoB,EAAE;QAC7B,IAAI,CAACF,WAAW,CAACoB,IAAI,EAAE;QACvBF,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;OACtC,MAAM;QACL,IAAI,CAACE,UAAU,EAAE;QACjB,IAAI,CAACrB,WAAW,CAACiB,KAAK,EAAE;;IAE5B,CAAC,CAAC;EACJ;EAEAG,IAAIA,CAAA;IACF,IAAI,CAAClB,oBAAoB,GAAG,IAAI;IAChC,IAAI,CAACoB,eAAe,EAAE;IACtB,IAAI,CAACtB,WAAW,CAACoB,IAAI,EAAE;IACvBF,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;EACvC;EAEA,IAAIG,eAAeA,CAAA;IACjB,OAAO,IAAI,CAACC,YAAY,CAACnB,IAAI;EAC/B;;;uBA/CWN,uBAAuB;IAAA;EAAA;;;aAAvBA,uBAAuB;MAAA0B,OAAA,EAAvB1B,uBAAuB,CAAA2B,IAAA;MAAAC,UAAA,EAFtB;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}