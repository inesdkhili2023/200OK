{"ast":null,"code":"import { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/job-application.service\";\nimport * as i2 from \"../services/job-offer.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/common/http\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/router\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"@angular/material/card\";\nimport * as i9 from \"@angular/material/icon\";\nimport * as i10 from \"@angular/material/form-field\";\nimport * as i11 from \"@angular/material/input\";\nimport * as i12 from \"@angular/material/select\";\nimport * as i13 from \"@angular/material/core\";\nimport * as i14 from \"@angular/material/button\";\nimport * as i15 from \"@angular/material/menu\";\nimport * as i16 from \"@angular/material/paginator\";\nimport * as i17 from \"@angular/material/table\";\nimport * as i18 from \"@angular/material/sort\";\nimport * as i19 from \"@angular/material/progress-bar\";\nfunction JobAppAdminComponent_th_70_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 44);\n    i0.ɵɵtext(1, \" Pr\\u00E9nom \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction JobAppAdminComponent_td_71_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 45);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r20 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r20.firstName, \" \");\n  }\n}\nfunction JobAppAdminComponent_th_73_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 44);\n    i0.ɵɵtext(1, \" Nom \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction JobAppAdminComponent_td_74_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 45);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r21 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r21.lastName, \" \");\n  }\n}\nfunction JobAppAdminComponent_th_76_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 44);\n    i0.ɵɵtext(1, \" Email \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction JobAppAdminComponent_td_77_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 45);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r22 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r22.email, \" \");\n  }\n}\nfunction JobAppAdminComponent_th_79_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 44);\n    i0.ɵɵtext(1, \" T\\u00E9l\\u00E9phone \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction JobAppAdminComponent_td_80_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 45);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r23 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r23.phone, \" \");\n  }\n}\nfunction JobAppAdminComponent_th_82_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 44);\n    i0.ɵɵtext(1, \" Date de candidature \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction JobAppAdminComponent_td_83_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 45);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"date\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r24 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(2, 1, element_r24.appliedAt, \"dd/MM/yyyy\"), \" \");\n  }\n}\nfunction JobAppAdminComponent_th_85_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 44);\n    i0.ɵɵtext(1, \" Score de compatibilit\\u00E9 \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction JobAppAdminComponent_td_86_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 45)(1, \"div\", 46)(2, \"strong\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"mat-progress-bar\", 47);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const element_r25 = ctx.$implicit;\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r11.calculateCompatibilityScore(element_r25.jobOffer, element_r25), \"%\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", ctx_r11.calculateCompatibilityScore(element_r25.jobOffer, element_r25));\n  }\n}\nfunction JobAppAdminComponent_th_88_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 48);\n    i0.ɵɵtext(1, \" Statut \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction JobAppAdminComponent_td_89_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r32 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 52);\n    i0.ɵɵlistener(\"click\", function JobAppAdminComponent_td_89_button_5_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r32);\n      const status_r29 = restoredCtx.$implicit;\n      const element_r26 = i0.ɵɵnextContext().$implicit;\n      const ctx_r30 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r30.updateApplicationStatus(element_r26.jobApplicationId, status_r29.value));\n    });\n    i0.ɵɵelementStart(1, \"span\", 53);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const status_r29 = ctx.$implicit;\n    const ctx_r28 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", ctx_r28.getStatusClass(status_r29.value));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", status_r29.label, \" \");\n  }\n}\nfunction JobAppAdminComponent_td_89_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 45)(1, \"span\", 49);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-menu\", null, 50);\n    i0.ɵɵtemplate(5, JobAppAdminComponent_td_89_button_5_Template, 3, 2, \"button\", 51);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const element_r26 = ctx.$implicit;\n    const _r27 = i0.ɵɵreference(4);\n    const ctx_r13 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matMenuTriggerFor\", _r27)(\"ngClass\", ctx_r13.getStatusClass(element_r26.applicationStatus));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r13.getStatusLabel(element_r26.applicationStatus), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r13.statusList);\n  }\n}\nfunction JobAppAdminComponent_th_91_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 48);\n    i0.ɵɵtext(1, \" CV \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction JobAppAdminComponent_td_92_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r35 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 45)(1, \"button\", 54);\n    i0.ɵɵlistener(\"click\", function JobAppAdminComponent_td_92_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r35);\n      const element_r33 = restoredCtx.$implicit;\n      const ctx_r34 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r34.voirCV(element_r33.resume));\n    });\n    i0.ɵɵelementStart(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"picture_as_pdf\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \" Voir le CV \");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction JobAppAdminComponent_th_94_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 48);\n    i0.ɵɵtext(1, \" Actions \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction JobAppAdminComponent_td_95_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r38 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 45)(1, \"button\", 55);\n    i0.ɵɵlistener(\"click\", function JobAppAdminComponent_td_95_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r38);\n      const element_r36 = restoredCtx.$implicit;\n      const ctx_r37 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r37.viewApplication(element_r36));\n    });\n    i0.ɵɵelementStart(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"visibility\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"button\", 56);\n    i0.ɵɵlistener(\"click\", function JobAppAdminComponent_td_95_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r38);\n      const element_r36 = restoredCtx.$implicit;\n      const ctx_r39 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r39.deleteApplication(element_r36.jobApplicationId));\n    });\n    i0.ɵɵelementStart(5, \"mat-icon\");\n    i0.ɵɵtext(6, \"delete\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction JobAppAdminComponent_tr_96_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 57);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"selected-row\": a0\n  };\n};\nfunction JobAppAdminComponent_tr_97_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r42 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 58);\n    i0.ɵɵlistener(\"click\", function JobAppAdminComponent_tr_97_Template_tr_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r42);\n      const row_r40 = restoredCtx.$implicit;\n      const ctx_r41 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r41.onRowClick(row_r40));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r40 = ctx.$implicit;\n    const ctx_r19 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(1, _c0, ctx_r19.selectedRowIndex === (row_r40 == null ? null : row_r40.jobApplicationId)));\n  }\n}\nconst _c1 = function () {\n  return [5, 10, 15];\n};\nexport class JobAppAdminComponent {\n  constructor(jobApplicationService, jobOfferService, dialog, http) {\n    this.jobApplicationService = jobApplicationService;\n    this.jobOfferService = jobOfferService;\n    this.dialog = dialog;\n    this.http = http;\n    this.selectedStatus = '';\n    this.selectedDate = null;\n    this.jobApplications = [];\n    this.displayedColumns = ['firstName', 'lastName', 'email', 'phone', 'appliedAt', 'resume', 'compatibilityScore', 'applicationStatus', 'actions'];\n    this.dataSource = new MatTableDataSource([]);\n    this.statusList = [{\n      value: 'ON_HOLD',\n      label: 'En attente'\n    }, {\n      value: 'ACCEPTED',\n      label: 'Accepté'\n    }, {\n      value: 'REFUSED',\n      label: 'Refusé'\n    }];\n    this.statusCounts = {}; // Object to store the count of applications per status\n    this.totalApplications = 0; // Store total number of applications\n    this.selectedRowIndex = null;\n  }\n  ngOnInit() {\n    this.getJobApplications();\n  }\n  getJobApplications() {\n    this.jobApplicationService.getJobApplications().subscribe(data => {\n      this.jobApplications = data.map(application => ({\n        ...application,\n        jobTitle: application.jobOffer?.title || 'Non spécifié' // 🔹 Utilise le `jobOffer`\n      }));\n\n      this.totalApplications = this.jobApplications.length;\n      this.calculateStatusCounts();\n      this.dataSource = new MatTableDataSource(this.jobApplications);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    }, error => {\n      console.error('Erreur lors de la récupération des candidatures', error);\n    });\n  }\n  // Appliquer un filtre recherche\n  applyFilter(event) {\n    const filterValue = event.target.value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n  // Afficher les détails d'une candidature\n  viewApplication(application) {\n    alert(`Candidat: ${application.firstName} ${application.lastName}\\nEmail: ${application.email}`);\n  }\n  openResume(resumePath) {\n    if (!resumePath) {\n      alert(\"Aucun CV disponible pour cette candidature.\");\n      return;\n    }\n    // Vérifier si le chemin commence par \"http://\" ou \"https://\" sinon ajouter l'URL du backend\n    const fileUrl = `http://localhost:8081/uploads/${encodeURIComponent(resumePath)}`;\n    console.log(\"Opening file:\", fileUrl);\n    window.open(fileUrl, '_blank');\n  }\n  // Supprimer une candidature\n  deleteApplication(applicationId) {\n    if (confirm('Voulez-vous vraiment supprimer cette candidature ?')) {\n      this.jobApplicationService.deleteJobApplication(applicationId).subscribe(() => {\n        console.log('Candidature supprimée avec succès');\n        this.getJobApplications(); // Recharger la liste après suppression\n      }, error => {\n        console.error('Erreur lors de la suppression de la candidature', error);\n      });\n    }\n  }\n  updateApplicationStatus(applicationId, newStatus) {\n    if (!applicationId || !newStatus) {\n      console.warn(\"ID ou statut invalide pour la mise à jour\");\n      return;\n    }\n    // Mettre à jour le statut de la candidature\n    this.jobApplicationService.updateJobApplicationStatus(applicationId, newStatus).subscribe(() => {\n      console.log(`Statut mis à jour : ${newStatus}`);\n      // Trouver et mettre à jour le statut dans la liste des candidatures\n      const application = this.jobApplications.find(app => app.jobApplicationId === applicationId);\n      if (application) {\n        application.applicationStatus = newStatus; // Mise à jour du statut\n      }\n      // Recalculer les statistiques directement après la mise à jour\n      this.calculateStatusCounts();\n      // Mettre à jour la source des données pour refléter les modifications\n      this.dataSource.data = [...this.jobApplications]; // Important pour que la table se mette à jour\n    }, error => {\n      console.error(\"Erreur lors de la mise à jour du statut\", error);\n    });\n  }\n  applyFilter2() {\n    let filteredData = this.jobApplications;\n    // Filtre par statut\n    if (this.selectedStatus) {\n      filteredData = filteredData.filter(application => application.applicationStatus === this.selectedStatus);\n    }\n    // Filtre par date de candidature\n    if (this.selectedDate) {\n      const selectedDateString = this.selectedDate.toISOString().split('T')[0]; // Format YYYY-MM-DD\n      filteredData = filteredData.filter(application => application.appliedAt.split('T')[0] === selectedDateString);\n    }\n    this.dataSource.data = filteredData; // Mettre à jour la table\n  }\n\n  sortApplications(order) {\n    this.dataSource.data.sort((a, b) => {\n      const dateA = new Date(a.appliedAt).getTime();\n      const dateB = new Date(b.appliedAt).getTime();\n      return order === 'recent' ? dateB - dateA : dateA - dateB;\n    });\n    this.updatePaginatedApplications();\n  }\n  updatePaginatedApplications() {\n    this.dataSource._updateChangeSubscription(); // Force la mise à jour du tableau\n  }\n\n  voirCV(filePath) {\n    // Extraire le nom du fichier\n    const fileName = this.extraireNomFichier(filePath);\n    console.log(\"Nom du fichier :\", fileName); // Vérifier la valeur\n    if (!fileName) {\n      alert(\"Le fichier CV est introuvable !\");\n      return;\n    }\n    window.open(`http://localhost:8081/jobapplications/files/${fileName}`, '_blank');\n  }\n  // Fonction pour extraire le nom du fichier sans fakepath\n  extraireNomFichier(filePath) {\n    const index = filePath.lastIndexOf('\\\\'); // Cherche le dernier '\\'\n    if (index === -1) {\n      return filePath; // Si il n'y a pas de fakepath, retourne le chemin complet\n    }\n\n    return filePath.substring(index + 1); // Retourne juste le nom du fichier après le dernier '\\'\n  }\n\n  getStatusClass(status) {\n    switch (status) {\n      case 'ACCEPTED':\n        return 'status-accepted';\n      case 'ON_HOLD':\n        return 'status-on-hold';\n      case 'REFUSED':\n        return 'status-refused';\n      default:\n        return '';\n    }\n  }\n  getStatusLabel(status) {\n    switch (status) {\n      case 'ACCEPTED':\n        return 'Accepté';\n      case 'ON_HOLD':\n        return 'En attente';\n      case 'REFUSED':\n        return 'Refusé';\n      default:\n        return status;\n    }\n  }\n  calculateStatusCounts() {\n    // Réinitialisation des compteurs de statut\n    this.statusCounts = {\n      'ON_HOLD': 0,\n      'ACCEPTED': 0,\n      'REFUSED': 0\n    };\n    // Compte des candidatures par statut\n    this.jobApplications.forEach(application => {\n      if (this.statusCounts[application.applicationStatus] !== undefined) {\n        this.statusCounts[application.applicationStatus]++;\n      }\n    });\n    // Mettre à jour le total des candidatures\n    this.totalApplications = this.jobApplications.length;\n  }\n  calculateCompatibilityScore(jobOffer, jobApplication) {\n    let score = 0;\n    const totalWeight = 100;\n    const safeToLowerCase = value => value ? value.toLowerCase() : '';\n    // Compétences et Langues (25%)\n    if (jobApplication?.specialiteEtude && jobOffer?.requirements) {\n      if (jobApplication.specialiteEtude.toLowerCase().includes(jobOffer.requirements.toLowerCase())) {\n        score += 12.5; // Compétences\n      }\n    }\n    // Langues (25%) - Basé uniquement sur les langues de la candidature\n    if (jobApplication?.languages) {\n      const applicationLanguages = jobApplication.languages.split(',').map(lang => lang.trim().toLowerCase()); // Array of languages from the application\n      // Add 5 points for each language mentioned in the application\n      score += applicationLanguages.length * 5;\n    }\n    // Correspondance de la localisation (15%)\n    if (jobApplication?.ville && jobOffer?.location) {\n      if (safeToLowerCase(jobApplication.ville) === safeToLowerCase(jobOffer.location)) {\n        score += 15; // 15 points if the city matches\n      }\n    }\n    // Type de contrat (15%)\n    if (jobApplication?.typePoste && jobOffer?.contractType) {\n      if (safeToLowerCase(jobApplication.typePoste) === safeToLowerCase(jobOffer.contractType)) {\n        score += 15; // 15 points if contract type matches\n      }\n    }\n    // Lettre de motivation (15%) - If a cover letter exists, add 15 points\n    if (jobApplication?.lettreMotivation) {\n      score += 15;\n    }\n    // Disponibilité immédiate (30 points si \"oui\") - Add 30 points if availability is \"1\"\n    if (jobApplication.disponibilite === '1') {\n      score += 30; // 30 points if the candidate is available immediately\n    }\n    // Resume (10 points if it exists)\n    if (jobApplication.resume) {\n      score += 10; // Add 10 points if resume exists\n    }\n    // Niveau d'expérience (5% - 15%)\n    if (jobApplication?.niveauExperience) {\n      switch (jobApplication.niveauExperience) {\n        case 'Débutant':\n          score += 10; // 5 points for 'Débutant'\n          break;\n        case 'Intermédiaire':\n          score += 15; // 10 points for 'Intermédiaire'\n          break;\n        case 'Expert':\n          score += 20; // 15 points for 'Expert'\n          break;\n        default:\n          break;\n      }\n    }\n    // Ajouter 5 points si commentaire existe\n    if (jobApplication?.commentaire) {\n      score += 10;\n    }\n    // Niveau d’études (15%) - Add points based on education level\n    if (jobApplication?.niveauEtudes) {\n      switch (jobApplication.niveauEtudes) {\n        case 'Bac':\n          score += 5; // 5 points for 'Bac'\n          break;\n        case 'Licence':\n          score += 10; // 10 points for 'Licence'\n          break;\n        case 'Master':\n          score += 15; // 15 points for 'Master'\n          break;\n        case 'Doctorat':\n          score += 20; // 20 points for 'Doctorat'\n          break;\n        default:\n          break;\n      }\n    }\n    // Final calculation of the score based on total weight\n    return Math.round(score / totalWeight * totalWeight); // Ensure the score is properly calculated\n  }\n\n  onRowClick(row) {\n    console.log('Selected row:', row);\n    this.selectedRowIndex = row.jobApplicationId;\n  }\n  static {\n    this.ɵfac = function JobAppAdminComponent_Factory(t) {\n      return new (t || JobAppAdminComponent)(i0.ɵɵdirectiveInject(i1.JobApplicationService), i0.ɵɵdirectiveInject(i2.JobOfferService), i0.ɵɵdirectiveInject(i3.MatDialog), i0.ɵɵdirectiveInject(i4.HttpClient));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: JobAppAdminComponent,\n      selectors: [[\"app-job-app-admin\"]],\n      viewQuery: function JobAppAdminComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(MatPaginator, 5);\n          i0.ɵɵviewQuery(MatSort, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n        }\n      },\n      decls: 99,\n      vars: 10,\n      consts: [[1, \"breadcrumb\"], [1, \"container\"], [\"routerLink\", \"/admin/dashboard\"], [1, \"card-header\", \"bg-primary\", \"text-white\"], [1, \"card\", \"mb-4\"], [1, \"card-header\", \"bg-light\"], [1, \"card-body\"], [1, \"row\"], [1, \"col-md-3\"], [1, \"stat-item\"], [1, \"stat-icon\", 2, \"color\", \"#007bff\"], [1, \"stat-item\", \"en-attente\"], [1, \"stat-icon\", 2, \"color\", \"#f39c12\"], [1, \"stat-item\", \"acceptees\"], [1, \"stat-icon\", 2, \"color\", \"#28a745\"], [1, \"stat-item\", \"refusees\"], [1, \"stat-icon\", 2, \"color\", \"#dc3545\"], [1, \"trinta-card\", \"leads-report-card\", \"mb-25\", \"bg-white\", \"border-none\", \"d-block\"], [1, \"filters-container\"], [\"appearance\", \"outline\", 1, \"search\", \"full-width\"], [\"matInput\", \"\", \"placeholder\", \"Rechercher par nom, email...\", 3, \"keyup\"], [\"appearance\", \"outline\", 1, \"filter\"], [3, \"ngModel\", \"ngModelChange\", \"selectionChange\"], [\"value\", \"\"], [\"value\", \"ON_HOLD\"], [\"value\", \"ACCEPTED\"], [\"value\", \"REFUSED\"], [1, \"table-responsive\"], [\"mat-table\", \"\", \"matSort\", \"\", 1, \"mat-elevation-z8\", 3, \"dataSource\"], [\"matColumnDef\", \"firstName\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"lastName\"], [\"matColumnDef\", \"email\"], [\"matColumnDef\", \"phone\"], [\"matColumnDef\", \"appliedAt\"], [\"matColumnDef\", \"compatibilityScore\"], [\"matColumnDef\", \"applicationStatus\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"matColumnDef\", \"resume\"], [\"matColumnDef\", \"actions\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 3, \"ngClass\", \"click\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"showFirstLastButtons\", \"\", 3, \"pageSizeOptions\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\"], [\"mat-cell\", \"\"], [1, \"score-container\"], [\"mode\", \"determinate\", 3, \"value\"], [\"mat-header-cell\", \"\"], [1, \"status-badge\", 3, \"matMenuTriggerFor\", \"ngClass\"], [\"menu\", \"matMenu\"], [\"mat-menu-item\", \"\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"mat-menu-item\", \"\", 3, \"click\"], [1, \"status-badge\", 3, \"ngClass\"], [\"mat-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"mat-icon-button\", \"\", 3, \"click\"], [\"mat-icon-button\", \"\", \"color\", \"warn\", 3, \"click\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\", 3, \"ngClass\", \"click\"]],\n      template: function JobAppAdminComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"h2\");\n          i0.ɵɵtext(3, \"Dashboard Admin\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"ul\")(5, \"li\")(6, \"a\", 2);\n          i0.ɵɵtext(7, \"Dashboard\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(8, \" >\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"li\");\n          i0.ɵɵtext(10, \"Candidatures\");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelement(11, \"div\", 3);\n          i0.ɵɵelementStart(12, \"div\", 4);\n          i0.ɵɵelement(13, \"div\", 5);\n          i0.ɵɵelementStart(14, \"div\", 6)(15, \"div\", 7)(16, \"div\", 8)(17, \"div\", 9)(18, \"mat-icon\", 10);\n          i0.ɵɵtext(19, \"group\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"h5\");\n          i0.ɵɵtext(21, \"Total Candidatures\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(22, \"p\");\n          i0.ɵɵtext(23);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(24, \"div\", 8)(25, \"div\", 11)(26, \"mat-icon\", 12);\n          i0.ɵɵtext(27, \"hourglass_empty\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(28, \"h5\");\n          i0.ɵɵtext(29, \"En Attente\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(30, \"p\");\n          i0.ɵɵtext(31);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(32, \"div\", 8)(33, \"div\", 13)(34, \"mat-icon\", 14);\n          i0.ɵɵtext(35, \"check_circle\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(36, \"h5\");\n          i0.ɵɵtext(37, \"Accept\\u00E9es\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(38, \"p\");\n          i0.ɵɵtext(39);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(40, \"div\", 8)(41, \"div\", 15)(42, \"mat-icon\", 16);\n          i0.ɵɵtext(43, \"cancel\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(44, \"h5\");\n          i0.ɵɵtext(45, \"Refus\\u00E9es\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(46, \"p\");\n          i0.ɵɵtext(47);\n          i0.ɵɵelementEnd()()()()()();\n          i0.ɵɵelementStart(48, \"mat-card\", 17)(49, \"mat-card-content\")(50, \"div\", 18)(51, \"mat-form-field\", 19)(52, \"mat-label\");\n          i0.ɵɵtext(53, \"Rechercher une candidature\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(54, \"input\", 20);\n          i0.ɵɵlistener(\"keyup\", function JobAppAdminComponent_Template_input_keyup_54_listener($event) {\n            return ctx.applyFilter($event);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(55, \"mat-form-field\", 21)(56, \"mat-label\");\n          i0.ɵɵtext(57, \"Statut\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(58, \"mat-select\", 22);\n          i0.ɵɵlistener(\"ngModelChange\", function JobAppAdminComponent_Template_mat_select_ngModelChange_58_listener($event) {\n            return ctx.selectedStatus = $event;\n          })(\"selectionChange\", function JobAppAdminComponent_Template_mat_select_selectionChange_58_listener() {\n            return ctx.applyFilter2();\n          });\n          i0.ɵɵelementStart(59, \"mat-option\", 23);\n          i0.ɵɵtext(60, \"Tous\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(61, \"mat-option\", 24);\n          i0.ɵɵtext(62, \"En attente\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(63, \"mat-option\", 25);\n          i0.ɵɵtext(64, \"Accept\\u00E9\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(65, \"mat-option\", 26);\n          i0.ɵɵtext(66, \"Refus\\u00E9\");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(67, \"div\", 27)(68, \"table\", 28);\n          i0.ɵɵelementContainerStart(69, 29);\n          i0.ɵɵtemplate(70, JobAppAdminComponent_th_70_Template, 2, 0, \"th\", 30);\n          i0.ɵɵtemplate(71, JobAppAdminComponent_td_71_Template, 2, 1, \"td\", 31);\n          i0.ɵɵelementContainerEnd();\n          i0.ɵɵelementContainerStart(72, 32);\n          i0.ɵɵtemplate(73, JobAppAdminComponent_th_73_Template, 2, 0, \"th\", 30);\n          i0.ɵɵtemplate(74, JobAppAdminComponent_td_74_Template, 2, 1, \"td\", 31);\n          i0.ɵɵelementContainerEnd();\n          i0.ɵɵelementContainerStart(75, 33);\n          i0.ɵɵtemplate(76, JobAppAdminComponent_th_76_Template, 2, 0, \"th\", 30);\n          i0.ɵɵtemplate(77, JobAppAdminComponent_td_77_Template, 2, 1, \"td\", 31);\n          i0.ɵɵelementContainerEnd();\n          i0.ɵɵelementContainerStart(78, 34);\n          i0.ɵɵtemplate(79, JobAppAdminComponent_th_79_Template, 2, 0, \"th\", 30);\n          i0.ɵɵtemplate(80, JobAppAdminComponent_td_80_Template, 2, 1, \"td\", 31);\n          i0.ɵɵelementContainerEnd();\n          i0.ɵɵelementContainerStart(81, 35);\n          i0.ɵɵtemplate(82, JobAppAdminComponent_th_82_Template, 2, 0, \"th\", 30);\n          i0.ɵɵtemplate(83, JobAppAdminComponent_td_83_Template, 3, 4, \"td\", 31);\n          i0.ɵɵelementContainerEnd();\n          i0.ɵɵelementContainerStart(84, 36);\n          i0.ɵɵtemplate(85, JobAppAdminComponent_th_85_Template, 2, 0, \"th\", 30);\n          i0.ɵɵtemplate(86, JobAppAdminComponent_td_86_Template, 5, 2, \"td\", 31);\n          i0.ɵɵelementContainerEnd();\n          i0.ɵɵelementContainerStart(87, 37);\n          i0.ɵɵtemplate(88, JobAppAdminComponent_th_88_Template, 2, 0, \"th\", 38);\n          i0.ɵɵtemplate(89, JobAppAdminComponent_td_89_Template, 6, 4, \"td\", 31);\n          i0.ɵɵelementContainerEnd();\n          i0.ɵɵelementContainerStart(90, 39);\n          i0.ɵɵtemplate(91, JobAppAdminComponent_th_91_Template, 2, 0, \"th\", 38);\n          i0.ɵɵtemplate(92, JobAppAdminComponent_td_92_Template, 5, 0, \"td\", 31);\n          i0.ɵɵelementContainerEnd();\n          i0.ɵɵelementContainerStart(93, 40);\n          i0.ɵɵtemplate(94, JobAppAdminComponent_th_94_Template, 2, 0, \"th\", 38);\n          i0.ɵɵtemplate(95, JobAppAdminComponent_td_95_Template, 7, 0, \"td\", 31);\n          i0.ɵɵelementContainerEnd();\n          i0.ɵɵtemplate(96, JobAppAdminComponent_tr_96_Template, 1, 0, \"tr\", 41);\n          i0.ɵɵtemplate(97, JobAppAdminComponent_tr_97_Template, 1, 3, \"tr\", 42);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelement(98, \"mat-paginator\", 43);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(23);\n          i0.ɵɵtextInterpolate(ctx.totalApplications);\n          i0.ɵɵadvance(8);\n          i0.ɵɵtextInterpolate(ctx.statusCounts[\"ON_HOLD\"]);\n          i0.ɵɵadvance(8);\n          i0.ɵɵtextInterpolate(ctx.statusCounts[\"ACCEPTED\"]);\n          i0.ɵɵadvance(8);\n          i0.ɵɵtextInterpolate(ctx.statusCounts[\"REFUSED\"]);\n          i0.ɵɵadvance(11);\n          i0.ɵɵproperty(\"ngModel\", ctx.selectedStatus);\n          i0.ɵɵadvance(10);\n          i0.ɵɵproperty(\"dataSource\", ctx.dataSource);\n          i0.ɵɵadvance(28);\n          i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"pageSizeOptions\", i0.ɵɵpureFunction0(9, _c1));\n        }\n      },\n      dependencies: [i5.NgClass, i5.NgForOf, i6.RouterLink, i7.NgControlStatus, i7.NgModel, i8.MatCard, i8.MatCardContent, i9.MatIcon, i10.MatFormField, i10.MatLabel, i11.MatInput, i12.MatSelect, i13.MatOption, i14.MatButton, i14.MatIconButton, i15.MatMenu, i15.MatMenuItem, i15.MatMenuTrigger, i16.MatPaginator, i17.MatTable, i17.MatHeaderCellDef, i17.MatHeaderRowDef, i17.MatColumnDef, i17.MatCellDef, i17.MatRowDef, i17.MatHeaderCell, i17.MatCell, i17.MatHeaderRow, i17.MatRow, i18.MatSort, i18.MatSortHeader, i19.MatProgressBar, i5.DatePipe],\n      styles: [\".breadcrumb[_ngcontent-%COMP%]{\\n  margin-top: 70px;\\n}\\n.card-header[_ngcontent-%COMP%]{\\n  margin-top: -10px;\\n  background-color: #344659;\\n\\n}\\n.mb-0[_ngcontent-%COMP%]{\\n  text-align: center;\\n  \\n}\\n.search[_ngcontent-%COMP%]{\\n  width:60%;\\n  margin-left: 20px;\\n}\\n\\n\\n.status-on-hold[_ngcontent-%COMP%] {\\n  color: orange ; \\n\\n}\\n\\n.status-accepted[_ngcontent-%COMP%] {\\n  color: green ; \\n\\n}\\n\\n.status-refused[_ngcontent-%COMP%] {\\n  color: red ; \\n\\n}\\n\\n\\n.status-badge[_ngcontent-%COMP%] {\\n  display: inline-block;\\n  padding: 4px 10px;\\n  border-radius: 8px;\\n  font-weight: bold;\\n  text-align: center;\\n  min-width: 80px;\\n}\\n\\n.status-accepted[_ngcontent-%COMP%] {\\n  background-color: #e0f7e9;\\n  color: #2e7d32;\\n}\\n\\n.status-on-hold[_ngcontent-%COMP%] {\\n  background-color: #fff3e0;\\n  color: #e65100;\\n}\\n\\n.status-refused[_ngcontent-%COMP%] {\\n  background-color: #ffebee;\\n  color: #c62828;\\n}\\n\\n\\n\\n.custom-dropdown[_ngcontent-%COMP%]   .mat-option[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.custom-dropdown[_ngcontent-%COMP%]   .mat-option[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\n\\n.statistiques-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-around;\\n  text-align: center;\\n  padding: 15px 0;\\n  background-color: #f8f9fa;\\n  border-radius: 8px;\\n  margin-bottom: 20px;\\n}\\n\\n.stat-item[_ngcontent-%COMP%] {\\n  background: #fff;\\n  padding: 15px;\\n  border-radius: 8px;\\n  text-align: center;\\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\\n}\\n\\n.stat-item[_ngcontent-%COMP%]   h5[_ngcontent-%COMP%] {\\n  font-size: 16px;\\n  font-weight: bold;\\n  margin-bottom: 5px;\\n}\\n\\n.stat-item[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  font-size: 20px;\\n  font-weight: bold;\\n  color: #007bff;\\n}\\n\\n.en-attente[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] { color: #f39c12; } \\n\\n.acceptees[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] { color: #28a745; } \\n\\n.refusees[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] { color: #dc3545; } \\n\\n\\n.card-body[_ngcontent-%COMP%]{\\n  margin-left: 20px;\\n  margin-right: 20px;\\n\\n}\\nth.mat-header-cell[_ngcontent-%COMP%], td.mat-cell[_ngcontent-%COMP%] {\\n  width: 150px;\\n}\\n.stat-item[_ngcontent-%COMP%] {\\nbox-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\\n}\\n.filter[_ngcontent-%COMP%]{\\n  margin-left: 20px;\\n  margin-top: 10px;\\n}\\n.stat-item[_ngcontent-%COMP%]:hover {\\n  transform: translateY(-5px);\\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\\n}\\n.selected-row[_ngcontent-%COMP%] {\\n  background-color: #e3f2fd !important; \\n\\n  transition: background-color 0.3s ease-in-out, transform 0.2s ease;\\n  transform: scale(1.02); \\n\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvam9iLWFwcC1hZG1pbi9qb2ItYXBwLWFkbWluLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7QUFDbEI7QUFDQTtFQUNFLGlCQUFpQjtFQUNqQix5QkFBeUI7O0FBRTNCO0FBQ0E7RUFDRSxrQkFBa0I7O0FBRXBCO0FBQ0E7RUFDRSxTQUFTO0VBQ1QsaUJBQWlCO0FBQ25CO0FBQ0EseUNBQXlDO0FBQ3pDO0VBQ0UsY0FBYyxFQUFFLDZCQUE2QjtBQUMvQzs7QUFFQTtFQUNFLGFBQWEsRUFBRSx3QkFBd0I7QUFDekM7O0FBRUE7RUFDRSxXQUFXLEVBQUUsd0JBQXdCO0FBQ3ZDO0FBQ0Esc0JBQXNCO0FBQ3RCO0VBQ0UscUJBQXFCO0VBQ3JCLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsY0FBYztBQUNoQjs7QUFFQTtFQUNFLHlCQUF5QjtFQUN6QixjQUFjO0FBQ2hCOztBQUVBLGlDQUFpQztBQUNqQztFQUNFLGFBQWE7RUFDYixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxXQUFXO0FBQ2I7QUFDQSwyQ0FBMkM7QUFDM0M7RUFDRSxhQUFhO0VBQ2IsNkJBQTZCO0VBQzdCLGtCQUFrQjtFQUNsQixlQUFlO0VBQ2YseUJBQXlCO0VBQ3pCLGtCQUFrQjtFQUNsQixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsYUFBYTtFQUNiLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIseUNBQXlDO0FBQzNDOztBQUVBO0VBQ0UsZUFBZTtFQUNmLGlCQUFpQjtFQUNqQixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsaUJBQWlCO0VBQ2pCLGNBQWM7QUFDaEI7O0FBRUEsZ0JBQWdCLGNBQWMsRUFBRSxFQUFFLFdBQVc7QUFDN0MsZUFBZSxjQUFjLEVBQUUsRUFBRSxTQUFTO0FBQzFDLGNBQWMsY0FBYyxFQUFFLEVBQUUsVUFBVTs7QUFFMUM7RUFDRSxpQkFBaUI7RUFDakIsa0JBQWtCOztBQUVwQjtBQUNBO0VBQ0UsWUFBWTtBQUNkO0FBQ0E7QUFDQSx3Q0FBd0M7QUFDeEM7QUFDQTtFQUNFLGlCQUFpQjtFQUNqQixnQkFBZ0I7QUFDbEI7QUFDQTtFQUNFLDJCQUEyQjtFQUMzQix5Q0FBeUM7QUFDM0M7QUFDQTtFQUNFLG9DQUFvQyxFQUFFLGVBQWU7RUFDckQsa0VBQWtFO0VBQ2xFLHNCQUFzQixFQUFFLGlDQUFpQztFQUN6RCxlQUFlO0FBQ2pCIiwic291cmNlc0NvbnRlbnQiOlsiLmJyZWFkY3J1bWJ7XHJcbiAgbWFyZ2luLXRvcDogNzBweDtcclxufVxyXG4uY2FyZC1oZWFkZXJ7XHJcbiAgbWFyZ2luLXRvcDogLTEwcHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzM0NDY1OTtcclxuXHJcbn1cclxuLm1iLTB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIFxyXG59XHJcbi5zZWFyY2h7XHJcbiAgd2lkdGg6NjAlO1xyXG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xyXG59XHJcbi8qIETDg8KpZmluaXIgbGVzIGNvdWxldXJzIHNlbG9uIGxlIHN0YXR1dCAqL1xyXG4uc3RhdHVzLW9uLWhvbGQge1xyXG4gIGNvbG9yOiBvcmFuZ2UgOyAvKiBPcmFuZ2UgcG91ciBcIkVuIGF0dGVudGVcIiAqL1xyXG59XHJcblxyXG4uc3RhdHVzLWFjY2VwdGVkIHtcclxuICBjb2xvcjogZ3JlZW4gOyAvKiBWZXJ0IHBvdXIgXCJBY2NlcHTDg8KpXCIgKi9cclxufVxyXG5cclxuLnN0YXR1cy1yZWZ1c2VkIHtcclxuICBjb2xvcjogcmVkIDsgLyogUm91Z2UgcG91ciBcIlJlZnVzw4PCqVwiICovXHJcbn1cclxuLyogU3R5bGVzIGRlcyBiYWRnZXMgKi9cclxuLnN0YXR1cy1iYWRnZSB7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIHBhZGRpbmc6IDRweCAxMHB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgbWluLXdpZHRoOiA4MHB4O1xyXG59XHJcblxyXG4uc3RhdHVzLWFjY2VwdGVkIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTBmN2U5O1xyXG4gIGNvbG9yOiAjMmU3ZDMyO1xyXG59XHJcblxyXG4uc3RhdHVzLW9uLWhvbGQge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmYzZTA7XHJcbiAgY29sb3I6ICNlNjUxMDA7XHJcbn1cclxuXHJcbi5zdGF0dXMtcmVmdXNlZCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZWJlZTtcclxuICBjb2xvcjogI2M2MjgyODtcclxufVxyXG5cclxuLyogUGVyc29ubmFsaXNhdGlvbiBkdSBkcm9wZG93biAqL1xyXG4uY3VzdG9tLWRyb3Bkb3duIC5tYXQtb3B0aW9uIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5jdXN0b20tZHJvcGRvd24gLm1hdC1vcHRpb24gc3BhbiB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuLyogU3R5bGUgcG91ciBsYSBzZWN0aW9uIGRlcyBzdGF0aXN0aXF1ZXMgKi9cclxuLnN0YXRpc3RpcXVlcy1jb250YWluZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIHBhZGRpbmc6IDE1cHggMDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjhmOWZhO1xyXG4gIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG59XHJcblxyXG4uc3RhdC1pdGVtIHtcclxuICBiYWNrZ3JvdW5kOiAjZmZmO1xyXG4gIHBhZGRpbmc6IDE1cHg7XHJcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBib3gtc2hhZG93OiAwIDJweCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxufVxyXG5cclxuLnN0YXQtaXRlbSBoNSB7XHJcbiAgZm9udC1zaXplOiAxNnB4O1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIG1hcmdpbi1ib3R0b206IDVweDtcclxufVxyXG5cclxuLnN0YXQtaXRlbSBwIHtcclxuICBmb250LXNpemU6IDIwcHg7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgY29sb3I6ICMwMDdiZmY7XHJcbn1cclxuXHJcbi5lbi1hdHRlbnRlIHAgeyBjb2xvcjogI2YzOWMxMjsgfSAvKiBPcmFuZ2UgKi9cclxuLmFjY2VwdGVlcyBwIHsgY29sb3I6ICMyOGE3NDU7IH0gLyogVmVydCAqL1xyXG4ucmVmdXNlZXMgcCB7IGNvbG9yOiAjZGMzNTQ1OyB9IC8qIFJvdWdlICovXHJcblxyXG4uY2FyZC1ib2R5e1xyXG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xyXG4gIG1hcmdpbi1yaWdodDogMjBweDtcclxuXHJcbn1cclxudGgubWF0LWhlYWRlci1jZWxsLCB0ZC5tYXQtY2VsbCB7XHJcbiAgd2lkdGg6IDE1MHB4O1xyXG59XHJcbi5zdGF0LWl0ZW0ge1xyXG5ib3gtc2hhZG93OiAwIDJweCA0cHggcmdiYSgwLCAwLCAwLCAwLjMpO1xyXG59XHJcbi5maWx0ZXJ7XHJcbiAgbWFyZ2luLWxlZnQ6IDIwcHg7XHJcbiAgbWFyZ2luLXRvcDogMTBweDtcclxufVxyXG4uc3RhdC1pdGVtOmhvdmVyIHtcclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTVweCk7XHJcbiAgYm94LXNoYWRvdzogMCA4cHggMTZweCByZ2JhKDAsIDAsIDAsIDAuMik7XHJcbn1cclxuLnNlbGVjdGVkLXJvdyB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2UzZjJmZCAhaW1wb3J0YW50OyAvKiBCbGV1IGNsYWlyICovXHJcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzIGVhc2UtaW4tb3V0LCB0cmFuc2Zvcm0gMC4ycyBlYXNlO1xyXG4gIHRyYW5zZm9ybTogc2NhbGUoMS4wMik7IC8qIEVmZmV0IGzDg8KpZ2VyIGQnYWdyYW5kaXNzZW1lbnQgKi9cclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["MatPaginator","MatTableDataSource","MatSort","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","element_r20","firstName","element_r21","lastName","element_r22","email","element_r23","phone","ɵɵpipeBind2","element_r24","appliedAt","ɵɵelement","ctx_r11","calculateCompatibilityScore","element_r25","jobOffer","ɵɵproperty","ɵɵlistener","JobAppAdminComponent_td_89_button_5_Template_button_click_0_listener","restoredCtx","ɵɵrestoreView","_r32","status_r29","$implicit","element_r26","ɵɵnextContext","ctx_r30","ɵɵresetView","updateApplicationStatus","jobApplicationId","value","ctx_r28","getStatusClass","label","ɵɵtemplate","JobAppAdminComponent_td_89_button_5_Template","_r27","ctx_r13","applicationStatus","getStatusLabel","statusList","JobAppAdminComponent_td_92_Template_button_click_1_listener","_r35","element_r33","ctx_r34","voirCV","resume","JobAppAdminComponent_td_95_Template_button_click_1_listener","_r38","element_r36","ctx_r37","viewApplication","JobAppAdminComponent_td_95_Template_button_click_4_listener","ctx_r39","deleteApplication","JobAppAdminComponent_tr_97_Template_tr_click_0_listener","_r42","row_r40","ctx_r41","onRowClick","ɵɵpureFunction1","_c0","ctx_r19","selectedRowIndex","JobAppAdminComponent","constructor","jobApplicationService","jobOfferService","dialog","http","selectedStatus","selectedDate","jobApplications","displayedColumns","dataSource","statusCounts","totalApplications","ngOnInit","getJobApplications","subscribe","data","map","application","jobTitle","title","length","calculateStatusCounts","paginator","sort","error","console","applyFilter","event","filterValue","target","filter","trim","toLowerCase","alert","openResume","resumePath","fileUrl","encodeURIComponent","log","window","open","applicationId","confirm","deleteJobApplication","newStatus","warn","updateJobApplicationStatus","find","app","applyFilter2","filteredData","selectedDateString","toISOString","split","sortApplications","order","a","b","dateA","Date","getTime","dateB","updatePaginatedApplications","_updateChangeSubscription","filePath","fileName","extraireNomFichier","index","lastIndexOf","substring","status","forEach","undefined","jobApplication","score","totalWeight","safeToLowerCase","specialiteEtude","requirements","includes","languages","applicationLanguages","lang","ville","location","typePoste","contractType","lettreMotivation","disponibilite","niveauExperience","commentaire","niveauEtudes","Math","round","row","ɵɵdirectiveInject","i1","JobApplicationService","i2","JobOfferService","i3","MatDialog","i4","HttpClient","selectors","viewQuery","JobAppAdminComponent_Query","rf","ctx","JobAppAdminComponent_Template_input_keyup_54_listener","$event","JobAppAdminComponent_Template_mat_select_ngModelChange_58_listener","JobAppAdminComponent_Template_mat_select_selectionChange_58_listener","ɵɵelementContainerStart","JobAppAdminComponent_th_70_Template","JobAppAdminComponent_td_71_Template","ɵɵelementContainerEnd","JobAppAdminComponent_th_73_Template","JobAppAdminComponent_td_74_Template","JobAppAdminComponent_th_76_Template","JobAppAdminComponent_td_77_Template","JobAppAdminComponent_th_79_Template","JobAppAdminComponent_td_80_Template","JobAppAdminComponent_th_82_Template","JobAppAdminComponent_td_83_Template","JobAppAdminComponent_th_85_Template","JobAppAdminComponent_td_86_Template","JobAppAdminComponent_th_88_Template","JobAppAdminComponent_td_89_Template","JobAppAdminComponent_th_91_Template","JobAppAdminComponent_td_92_Template","JobAppAdminComponent_th_94_Template","JobAppAdminComponent_td_95_Template","JobAppAdminComponent_tr_96_Template","JobAppAdminComponent_tr_97_Template","ɵɵtextInterpolate","ɵɵpureFunction0","_c1"],"sources":["C:\\Users\\Malek\\Desktop\\pidev\\insurance-front\\src\\app\\job-app-admin\\job-app-admin.component.ts","C:\\Users\\Malek\\Desktop\\pidev\\insurance-front\\src\\app\\job-app-admin\\job-app-admin.component.html"],"sourcesContent":["import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { JobApplicationService } from '../services/job-application.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { HttpClient } from '@angular/common/http';\nimport { JobOfferService } from '../services/job-offer.service';\n@Component({\n  selector: 'app-job-app-admin',\n  templateUrl: './job-app-admin.component.html',\n  styleUrls: ['./job-app-admin.component.css'],\n})\nexport class JobAppAdminComponent implements OnInit {\n  selectedStatus: string = '';\nselectedDate: Date | null = null;\n  jobApplications: any[] = [];\n  displayedColumns: string[] = [\n    'firstName',\n    'lastName',\n    'email',\n    'phone',\n    'appliedAt',\n    'resume',\n    'compatibilityScore',\n    'applicationStatus',\n    'actions',\n  ];\n  dataSource = new MatTableDataSource<any>([]);\n  statusList = [\n    { value: 'ON_HOLD', label: 'En attente' },\n    { value: 'ACCEPTED', label: 'Accepté' },\n    { value: 'REFUSED', label: 'Refusé' }\n  ];\n    \n  statusCounts: any = {}; // Object to store the count of applications per status\n  totalApplications: number = 0; // Store total number of applications\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  constructor(\n    private jobApplicationService: JobApplicationService,\n    private jobOfferService:JobOfferService,\n    public dialog: MatDialog,\n    private http: HttpClient\n  ) {}\n  ngOnInit(): void {\n    this.getJobApplications();\n  }\n\n  getJobApplications(): void {\n    this.jobApplicationService.getJobApplications().subscribe(\n      (data) => {\n        this.jobApplications = data.map(application => ({\n          ...application,\n          jobTitle: application.jobOffer?.title || 'Non spécifié' // 🔹 Utilise le `jobOffer`\n        }));\n        this.totalApplications = this.jobApplications.length;\n        this.calculateStatusCounts(); \n        this.dataSource = new MatTableDataSource(this.jobApplications);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      },\n      (error) => {\n        console.error('Erreur lors de la récupération des candidatures', error);\n      }\n    );\n  }\n  \n\n  // Appliquer un filtre recherche\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    \n  }\n  // Afficher les détails d'une candidature\n  viewApplication(application: any): void {\n    alert(\n      `Candidat: ${application.firstName} ${application.lastName}\\nEmail: ${application.email}`\n    );\n  }\n  openResume(resumePath: string): void {\n    if (!resumePath) {\n      alert(\"Aucun CV disponible pour cette candidature.\");\n      return;\n    }\n  \n    // Vérifier si le chemin commence par \"http://\" ou \"https://\" sinon ajouter l'URL du backend\n    const fileUrl = `http://localhost:8081/uploads/${encodeURIComponent(resumePath)}`;\n    console.log(\"Opening file:\", fileUrl);\n    window.open((fileUrl), '_blank');\n\n  }\n  \n  \n\n  // Supprimer une candidature\n  deleteApplication(applicationId: number): void {\n    if (confirm('Voulez-vous vraiment supprimer cette candidature ?')) {\n      this.jobApplicationService.deleteJobApplication(applicationId).subscribe(\n        () => {\n          console.log('Candidature supprimée avec succès');\n          this.getJobApplications(); // Recharger la liste après suppression\n        },\n        (error) => {\n          console.error(\n            'Erreur lors de la suppression de la candidature',\n            error\n          );\n        }\n      );\n    }\n  }\n  updateApplicationStatus(applicationId: number, newStatus: string): void {\n    if (!applicationId || !newStatus) {\n      console.warn(\"ID ou statut invalide pour la mise à jour\");\n      return;\n    }\n  \n    // Mettre à jour le statut de la candidature\n    this.jobApplicationService.updateJobApplicationStatus(applicationId, newStatus).subscribe(\n      () => {\n        console.log(`Statut mis à jour : ${newStatus}`);\n  \n        // Trouver et mettre à jour le statut dans la liste des candidatures\n        const application = this.jobApplications.find(app => app.jobApplicationId === applicationId);\n        if (application) {\n          application.applicationStatus = newStatus;  // Mise à jour du statut\n        }\n  \n        // Recalculer les statistiques directement après la mise à jour\n        this.calculateStatusCounts(); \n        \n        // Mettre à jour la source des données pour refléter les modifications\n        this.dataSource.data = [...this.jobApplications];  // Important pour que la table se mette à jour\n  \n      },\n      (error) => {\n        console.error(\"Erreur lors de la mise à jour du statut\", error);\n      }\n    );\n  }\n  \n\n  applyFilter2() {\n    let filteredData = this.jobApplications;\n  \n   \n  \n    // Filtre par statut\n    if (this.selectedStatus) {\n      filteredData = filteredData.filter(application => application.applicationStatus === this.selectedStatus);\n    }\n  \n    // Filtre par date de candidature\n    if (this.selectedDate) {\n      const selectedDateString = this.selectedDate.toISOString().split('T')[0]; // Format YYYY-MM-DD\n      filteredData = filteredData.filter(application =>\n        application.appliedAt.split('T')[0] === selectedDateString\n      );\n    }\n  \n    this.dataSource.data = filteredData; // Mettre à jour la table\n  }\n  sortApplications(order: string) {\n    this.dataSource.data.sort((a, b) => {\n      const dateA = new Date(a.appliedAt).getTime();\n      const dateB = new Date(b.appliedAt).getTime();\n  \n      return order === 'recent' ? dateB - dateA : dateA - dateB;\n    });\n  \n    this.updatePaginatedApplications();\n  }\n  updatePaginatedApplications() {\n    this.dataSource._updateChangeSubscription(); // Force la mise à jour du tableau\n  }\n  voirCV(filePath: string) {\n    // Extraire le nom du fichier\n    const fileName = this.extraireNomFichier(filePath);\n  \n    console.log(\"Nom du fichier :\", fileName); // Vérifier la valeur\n    if (!fileName) {\n      alert(\"Le fichier CV est introuvable !\");\n      return;\n    }\n    window.open(`http://localhost:8081/jobapplications/files/${fileName}`, '_blank');\n  }\n  // Fonction pour extraire le nom du fichier sans fakepath\nextraireNomFichier(filePath: string): string {\n  const index = filePath.lastIndexOf('\\\\'); // Cherche le dernier '\\'\n  if (index === -1) {\n    return filePath; // Si il n'y a pas de fakepath, retourne le chemin complet\n  }\n  return filePath.substring(index + 1); // Retourne juste le nom du fichier après le dernier '\\'\n}\n\ngetStatusClass(status: string): string {\n  switch (status) {\n    case 'ACCEPTED':\n      return 'status-accepted';\n    case 'ON_HOLD':\n      return 'status-on-hold';\n    case 'REFUSED':\n      return 'status-refused';\n    default:\n      return '';\n  }\n}\n\ngetStatusLabel(status: string): string {\n  switch (status) {\n    case 'ACCEPTED':\n      return 'Accepté';\n    case 'ON_HOLD':\n      return 'En attente';\n    case 'REFUSED':\n      return 'Refusé';\n    default:\n      return status;\n  }\n}\ncalculateStatusCounts(): void {\n  // Réinitialisation des compteurs de statut\n  this.statusCounts = { 'ON_HOLD': 0, 'ACCEPTED': 0, 'REFUSED': 0 };\n\n  // Compte des candidatures par statut\n  this.jobApplications.forEach(application => {\n    if (this.statusCounts[application.applicationStatus] !== undefined) {\n      this.statusCounts[application.applicationStatus]++;\n    }\n  });\n\n  // Mettre à jour le total des candidatures\n  this.totalApplications = this.jobApplications.length;\n}\ncalculateCompatibilityScore(jobOffer: any, jobApplication: any): number {\n  let score = 0;\n  const totalWeight = 100;\n\n  const safeToLowerCase = (value: string) => (value ? value.toLowerCase() : '');\n\n  // Compétences et Langues (25%)\n  if (jobApplication?.specialiteEtude && jobOffer?.requirements) {\n    if (jobApplication.specialiteEtude.toLowerCase().includes(jobOffer.requirements.toLowerCase())) {\n      score += 12.5; // Compétences\n    }\n  }\n\n  // Langues (25%) - Basé uniquement sur les langues de la candidature\n  if (jobApplication?.languages) {\n    const applicationLanguages = jobApplication.languages.split(',').map((lang: string) => lang.trim().toLowerCase()); // Array of languages from the application\n\n    // Add 5 points for each language mentioned in the application\n    score += applicationLanguages.length * 5;\n  }\n\n  // Correspondance de la localisation (15%)\n  if (jobApplication?.ville && jobOffer?.location) {\n    if (safeToLowerCase(jobApplication.ville) === safeToLowerCase(jobOffer.location)) {\n      score += 15;  // 15 points if the city matches\n    }\n  }\n\n  // Type de contrat (15%)\n  if (jobApplication?.typePoste && jobOffer?.contractType) {\n    if (safeToLowerCase(jobApplication.typePoste) === safeToLowerCase(jobOffer.contractType)) {\n      score += 15;  // 15 points if contract type matches\n    }\n  }\n\n  // Lettre de motivation (15%) - If a cover letter exists, add 15 points\n  if (jobApplication?.lettreMotivation) {\n    score += 15;\n  }\n\n  // Disponibilité immédiate (30 points si \"oui\") - Add 30 points if availability is \"1\"\n  if (jobApplication.disponibilite === '1') {\n    score += 30;  // 30 points if the candidate is available immediately\n  }\n\n  // Resume (10 points if it exists)\n  if (jobApplication.resume) {\n    score += 10;  // Add 10 points if resume exists\n  }\n\n  // Niveau d'expérience (5% - 15%)\n  if (jobApplication?.niveauExperience) {\n    switch (jobApplication.niveauExperience) {\n      case 'Débutant':\n        score += 10;  // 5 points for 'Débutant'\n        break;\n      case 'Intermédiaire':\n        score += 15;  // 10 points for 'Intermédiaire'\n        break;\n      case 'Expert':\n        score += 20;  // 15 points for 'Expert'\n        break;\n      default:\n        break;\n    }\n  }\n\n  // Ajouter 5 points si commentaire existe\n  if (jobApplication?.commentaire) {\n    score += 10;\n  }\n\n  // Niveau d’études (15%) - Add points based on education level\n  if (jobApplication?.niveauEtudes) {\n    switch (jobApplication.niveauEtudes) {\n      case 'Bac':\n        score += 5;  // 5 points for 'Bac'\n        break;\n      case 'Licence':\n        score += 10;  // 10 points for 'Licence'\n        break;\n      case 'Master':\n        score += 15;  // 15 points for 'Master'\n        break;\n      case 'Doctorat':\n        score += 20;  // 20 points for 'Doctorat'\n        break;\n      default:\n        break;\n    }\n  }\n\n  // Final calculation of the score based on total weight\n  return Math.round((score / totalWeight) * totalWeight);  // Ensure the score is properly calculated\n}\nselectedRowIndex: number | null = null;\n\nonRowClick(row: any) {\n  console.log('Selected row:', row);\n  this.selectedRowIndex = row.jobApplicationId;\n}\n\n\n  \n}\n  \n\n","<section class=\"breadcrumb\">\n  <div class=\"container\">\n    <h2>Dashboard Admin</h2>\n    <ul>\n      <li><a routerLink=\"/admin/dashboard\">Dashboard</a> ></li>\n      <li>Candidatures</li>\n    </ul>\n  </div>\n</section>\n\n<!-- Card Header -->\n<div class=\"card-header bg-primary text-white\">\n <!-- <h2 class=\"mb-0\">Gestion des candidatures</h2>-->\n</div>\n\n<!-- Statistiques -->\n<div class=\"card mb-4\">\n  <div class=\"card-header bg-light\">\n   <!-- <h4 class=\"mb-0\">Statistiques des candidatures</h4>-->\n  </div>\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <!-- Total Candidatures -->\n      <div class=\"col-md-3\">\n        <div class=\"stat-item\">\n          <mat-icon class=\"stat-icon\" style=\"color:  #007bff;\">group</mat-icon>\n\n          <h5>Total Candidatures</h5>\n          <p>{{ totalApplications }}</p>\n        </div>\n      </div>\n\n      <!-- En attente -->\n      <div class=\"col-md-3\">\n        <div class=\"stat-item en-attente\">\n          <mat-icon class=\"stat-icon\" style=\"color: #f39c12;;\">hourglass_empty</mat-icon>\n\n          <h5>En Attente</h5>\n          <p>{{ statusCounts['ON_HOLD'] }}</p>\n        </div>\n      </div>\n\n      <!-- Acceptées -->\n      <div class=\"col-md-3\">\n        <div class=\"stat-item acceptees\">\n          <mat-icon class=\"stat-icon\" style=\"color:#28a745; ;\">check_circle</mat-icon>\n\n          <h5>Acceptées</h5>\n          <p>{{ statusCounts['ACCEPTED'] }}</p>\n        </div>\n      </div>\n\n      <!-- Refusées -->\n      <div class=\"col-md-3\">\n        <div class=\"stat-item refusees\">\n          <mat-icon class=\"stat-icon\" style=\"color:#dc3545 ;\">cancel</mat-icon>\n\n          <h5>Refusées</h5>\n          <p>{{ statusCounts['REFUSED'] }}</p>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- Main Card -->\n<mat-card class=\"trinta-card leads-report-card mb-25 bg-white border-none d-block\">\n  <mat-card-content>\n    \n    <!-- Search & Filters -->\n    <div class=\"filters-container\">\n      <mat-form-field appearance=\"outline\" class=\"search full-width\">\n        <mat-label>Rechercher une candidature</mat-label>\n        <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Rechercher par nom, email...\">\n      </mat-form-field>\n\n      <!-- Filtrer par statut -->\n      <mat-form-field appearance=\"outline\" class=\"filter\">\n        <mat-label>Statut</mat-label>\n        <mat-select [(ngModel)]=\"selectedStatus\" (selectionChange)=\"applyFilter2()\">\n          <mat-option value=\"\">Tous</mat-option>\n          <mat-option value=\"ON_HOLD\">En attente</mat-option>\n          <mat-option value=\"ACCEPTED\">Accepté</mat-option>\n          <mat-option value=\"REFUSED\">Refusé</mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <!-- Filtrer par date -->\n    \n    </div>\n\n    <!-- Table -->\n    <div class=\"table-responsive\">\n      <table mat-table [dataSource]=\"dataSource\" matSort class=\"mat-elevation-z8\">\n\n        <!-- Nom -->\n        <ng-container matColumnDef=\"firstName\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Prénom </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.firstName}} </td>\n        </ng-container>\n\n        <!-- Prénom -->\n        <ng-container matColumnDef=\"lastName\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Nom </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.lastName}} </td>\n        </ng-container>\n\n        <!-- Email -->\n        <ng-container matColumnDef=\"email\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.email}} </td>\n        </ng-container>\n\n        <!-- Téléphone -->\n        <ng-container matColumnDef=\"phone\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Téléphone </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.phone}} </td>\n        </ng-container>\n\n        <!-- Date de candidature -->\n        <ng-container matColumnDef=\"appliedAt\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Date de candidature </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.appliedAt | date:'dd/MM/yyyy'}} </td>\n        </ng-container>\n\n<!-- Score de compatibilité -->\n<ng-container matColumnDef=\"compatibilityScore\">\n  <th mat-header-cell *matHeaderCellDef mat-sort-header> Score de compatibilité </th>\n  <td mat-cell *matCellDef=\"let element\">\n    <div class=\"score-container\">\n      <strong>{{ calculateCompatibilityScore(element.jobOffer, element) }}%</strong>\n      <mat-progress-bar mode=\"determinate\" [value]=\"calculateCompatibilityScore(element.jobOffer, element)\"></mat-progress-bar>\n    </div>\n  </td>\n</ng-container>\n\n\n\n        <!-- Statut -->\n        <ng-container matColumnDef=\"applicationStatus\">\n          <th mat-header-cell *matHeaderCellDef> Statut </th>\n          <td mat-cell *matCellDef=\"let element\">\n            <!-- Badge cliquable qui ouvre le menu -->\n            <span [matMenuTriggerFor]=\"menu\" class=\"status-badge\" [ngClass]=\"getStatusClass(element.applicationStatus)\">\n              {{ getStatusLabel(element.applicationStatus) }}\n            </span>\n        \n            <!-- Menu déroulant contenant les statuts -->\n            <mat-menu #menu=\"matMenu\">\n              <button mat-menu-item *ngFor=\"let status of statusList\" (click)=\"updateApplicationStatus(element.jobApplicationId, status.value)\">\n                <span class=\"status-badge\" [ngClass]=\"getStatusClass(status.value)\">\n                  {{ status.label }}\n                </span>\n              </button>\n            </mat-menu>\n          </td>\n        </ng-container>\n        \n        \n        <!-- Résumé -->\n<ng-container matColumnDef=\"resume\">\n  <th mat-header-cell *matHeaderCellDef> CV </th>\n  <td mat-cell *matCellDef=\"let element\">\n    <button mat-button color=\"primary\" (click)=\"voirCV(element.resume)\">\n      <mat-icon>picture_as_pdf</mat-icon> Voir le CV\n    </button>\n  </td>\n</ng-container>\n\n\n        <!-- Actions -->\n        <ng-container matColumnDef=\"actions\">\n          <th mat-header-cell *matHeaderCellDef> Actions </th>\n          <td mat-cell *matCellDef=\"let element\">\n            <button mat-icon-button (click)=\"viewApplication(element)\">\n              <mat-icon>visibility</mat-icon>\n            </button>\n            <button mat-icon-button color=\"warn\" (click)=\"deleteApplication(element.jobApplicationId)\">\n              <mat-icon>delete</mat-icon>\n            </button>\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"(click)=\"onRowClick(row)\" \n        [ngClass]=\"{ 'selected-row': selectedRowIndex === row?.jobApplicationId }\"></tr>\n\n      </table>\n    </div>\n\n\n\n  </mat-card-content>\n</mat-card>\n<!-- Pagination -->\n<mat-paginator [pageSizeOptions]=\"[5, 10, 15]\"  showFirstLastButtons></mat-paginator>\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}